All in
-> sudo docker

DOCKER ENGINE
how it works

linux kernel feature that made it possible

cgroups : what a app can use ()cpu

docker run --cpus=.5 ubuntu
docker run --memory=100m ubuntu

namespace: what a app can see
	-pid



*************Most used

////////////////////////////////////////////////////////

pull : pull an image from repo
run : a-container-image
run -d : detach - its like fork to background
logs : see the log
attach : bring back the ps on the tty
ps : display running container process
ps -a : all
inspect  : more cmd
stop : + id or name stop a container
rm : remove a container
rm -v : remove a container + his volume
images : list available images
rmi : remove images *** delete all dependant containers
system prune : remove unused container
system prune : remove -all

/////////////////////////////////////////////////////////

run os sleep 100
exec (os ps name) echo coucou

////

default ip = 172.17.0.2
mapping to port -> 80 on host: 5000 on container

docker run -p 80:5000 lecontainer/pingping

-> persistence database
-> it mounts the data from the file into container

-v is for Volume

docker run -v /host/file/path:/var/lib/mysql mysql

////////
for postgres
/var/lib/postgresql/data

//environnement inside container

-----------------------------------------
create a template for developpement

sudo docker run --name nginx-template-base -p 8080:80 -e TERM=xterm -d nginx

/////////////////////////////////////////////////

DOCKERFILE

MUST KNOW

docker build -f /to/the/Dockerfile -t this/imagename .

----------------------------------------------------------
FROM ubuntu
RUN 	apt-get update \
	&& apt-get upgrade -y \
	&& apt-get -y install --no-install-recommends \
	&& rm -rf /var/lib/apt/lists/*

------
COPY /this/code.path  /opt/myapp
VOLUME
bind or create
WORKDIR
-------

ENTRYPOINT ["sleep"]
 	versus
CMD ["5"]
-------

//
docker run --entrypoint sleep2.0 ubuntu 10
// sleep2.0 10
///////////

docker run \
--mount type=bind,source=/host/data,target=/var/lib/mysql mysql

check mem size with -> docker history imagename

/////////////

storage drivers varies per host(os)
////////////////


docker-compose

version:3

swarn


/////////////

docker registry
/

docker run -d -p 5000:5000 --restart always --name registry registry:2

docker pull ubuntu
docker tag ubuntu localhost:5000/ubuntu
docker push localhost:5000/ubuntu

///////////////
